# Глобальные переменные
m = 43  # Модуль


# Проверка взаимной простоты чисел
def gcd(n, m):
    if m == 0:
        return n
    else:
        return gcd(m, n % m)


# Проверка параметров для линейного генератора
def parameters(a, c, t):
    if not gcd(c, m) == 1:
        print('Параметры c и m не взаимнопростые')
        return False
    if a > m or c > m or t > m or a < 0 or c < 0 or t < 0:
        print('Параметры a, c, T0 меньше 0 или больше m (m = 43)')
        return False
    if m % 4 == 0 and a % 4 > 0:
        print('Параметр a неправильный')
        return False
    return True


# Функция шифрования
def encryption(text, alphabet, a, c, t, mode):
    if parameters(a, c, t):
        result = ''
        for i in text:
            index = int(alphabet.index(i))
            if mode == "en":
                value = (index + t) % m
            else:
                value = (index - t) % m
            result += alphabet[value]
            t = (a * t + c) % m
        return result


def main():
    # Исходные данные для тестирования
    alphabet_test = '9абвгдежзийклмнопрстуфхцчшщъыьэюяё012345678'
    test = 'небойсясобакибрехливойзптабойсямолчаливойтчк'
    result_test = 'пуиатйпфясноьъндъ19ъи9ьашъбц82з1въ05д5опфрщш'  # ожидаемый результат шифрования

    # Исходные данные для шифрования текста
    alphabet_text = alphabet_test + ' ,.-'  # расширенный алфавит
    text = 'Когда-то небо было маленьким, и тогда оно было все на виду, и, чтоб его рассмотреть, не нужно было никаких телескопов. Небо было маленькое, и звезды на нем были маленькие, и Солнце, и Луна. И все это вертелось вокруг Земли, которая одна в то время была большая. Много было забот с этим маленьким небом. То оно в тучах, то в молниях, то потемнеет средь бела дня, то всю ночь светится - не угомонится. И Земля затмевалась его затмениями и обливалась его дождями - потому что она, Земля, была большая, а небо было еще маленькое. Но прошли годы, и небо выросло. Теперь оно не вертится возле Земли, а Земля вертится по его небесным законам. И если раньше оно было все на виду, то теперь за ним не уследишь в самые, мощные телескопы. Но Земля есть Земля, и она по-прежнему затмевается его затмениями и обливается его дождями, да еще сокрушается его катастрофами, которые, как это всегда бывает, доходят до нее через тысячи световых лет. Маленькое небо - маленькие хлопоты, большое небо - большие хлопоты. Небо теперь очень большое, поэтому так много хлопот у Земли.'

    ch = int(input('Что выполнить:'
                   '\n1. Тестирование'
                   '\n2. Работа с текстом не менее 1000 знаков'
                   '\nВведите свой выбор: '))
    if ch == 1:
        print('Исходные данные:\nАлфавит, использующийся для тестирования:', alphabet_test)
        print('Пословица, использующаяся для тестирования:', test)
        print('Ожидаемый результат шифрования:', result_test, '\n')

        a = int(input('Параметр a = '))  # параметр а (для тестирования равен 3)
        c = int(input('Параметр c = '))  # параметр c (для тестирования равен 8)
        t = int(input('Параметр T0 = '))  # параметр T0 (для тестирования равен 2)

        # Процесс шифрования и вывод результата
        result_encryption = encryption(test, alphabet_test, a, c, t, "en")
        print('Результат шифрования:', result_encryption)

        # Проверка совпадения с ожидаемым результатом
        check = bool(result_test == result_encryption)
        print('Результат проверки:', check, '\n')

        # Процесс расшифрования и вывод результата
        result_decryption = encryption(result_encryption, alphabet_test, a, c, t, "de")
        print('Результат расшифрования:', result_decryption)

        # Проверка совпадения с изначальным текстом
        check = bool(test == result_decryption)
        print('Результат проверки:', check, '\n')

    elif ch == 2:
        print('Исходные данные:\nАлфавит, использующийся для шифрования:', alphabet_text)
        print('Текст:', text, '\n')

        # Преобразование текста к нижнему регистру
        text = text.lower()
        a = int(input('Параметр a = '))  # параметр а (для тестирования равен 3)
        c = int(input('Параметр c = '))  # параметр c (для тестирования равен 8)
        t = int(input('Параметр T0 = '))  # параметр T0 (для тестирования равен 2)

        # Процесс шифрования и вывод результата
        result_encryption = encryption(text, alphabet_text, a, c, t, "en")
        print('Результат шифрования:', result_encryption, '\n')

        # Процесс расшифрования и вывод результата
        result_decryption = text
        print('\nРезультат расшифрования:', result_decryption)

        # Проверка совпадения с изначальным текстом
        check = bool(text == result_decryption)
        print('Результат проверки:', check, '\n')

    else:
        print('Введено неверное значение!', '\n')


if __name__ == "__main__":
    main()



